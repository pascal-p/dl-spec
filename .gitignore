.DS_Store
.ipynb_checkpoints

*.org
*.pyc
*.h5
*.csv

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

*ORIG*
*COPY*
*Copy*
*RO*
*.mp4
*.mat
Optimization_methods.ipynb
Tensorflow_Tutorial.ipynb
Tensorflow_Tutorial_v1.ipynb
Tensorflow_Tutorial_v2.ipynb
Residual_Networks_v1.ipynb
Residual_Networks_v2.ipynb
Autonomous_driving_application_Car_detection_v3.ipynb

04\ \-\ CNN/w3/images/0*.jpg
04\ \-\ CNN/w3/images/giraffe.jpg
04\ \-\ CNN/w3/yad2k
04\ \-\ CNN/w3/LICENSE

model_data/
nb_images/*.mp4
font

Face_Recognition_for_the_HappyHouse_v1.ipynb
Face_Recognition_for_the_HappyHouse_v2.ipynb
Face_Recognition_for_the_HappyHouse_v3.ipynb

Art_Generation_with_Neural_Style_Transfer_v1.ipynb
Art_Generation_with_Neural_Style_Transfer_v2.ipynb
Art_Generation_with_Neural_Style_Transfer_v3.ipynb
Pretrained_Model_LICENSE.txt
images/
04\ \-\ CNN/w4/02\ \-\ Neural\ Style\ Transfer/output/*.png

readonly/
Building_a_RNN_Step_by_Step_v3.ipynb
Building_a_Recurrent_Neural_Network_Step_by_Step_v3a.ipynb
05\ \-\ RNN/w1/01\ \-\ Buillding\ a\ RNN\ Step\ by\ Step/*.txt
05\ \-\ RNN/w1/01\ \-\ Buillding\ a\ RNN\ Step\ by\ Step/data/
05\ \-\ RNN/w1/03\ \-\ Jazz\ Improvisation\ with\ LSTM/data/
Dinosaurus_Island_Character_level_language_model_final_v3.ipynb
Improvise_a_Jazz_Solo_with_an_LSTM_Network_v3.ipynb
Operations_on_word_vectors_v2a-RO.ipynb
Operations_on_word_vectors_v2.ipynb
glove.6B.50d.txt
Emojify_v2a-RO.ipynb
Emojify_v2.ipynb
Neural_machine_translation_with_attention_v4.ipynb